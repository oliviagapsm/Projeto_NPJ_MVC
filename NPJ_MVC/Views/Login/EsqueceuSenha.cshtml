
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container d-flex justify-content-center">
        <div class="card d-flex align-items-center" style="width: 25rem; height: auto;">
            <img class="card-img-top" src="~/Images/card-login.jpg" alt="Foto de cabeçalho da página de Login">
            <div class="card-body">
                <h4 class="card-title d-flex justify-content-center">Esqueci minha senha</h4>

                <form name="form" method="post" action="">
                    @if (ViewBag.msgErro != null)
                    {
                        <div class="alert alert-danger">
                            @ViewBag.msgErro
                        </div>
                    }

                    @if (ViewBag.msgSucesso != null)
                    {
                        <div class="alert alert-success">
                            @ViewBag.msgSucesso
                        </div>
                    }

                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="basic-addon1"><i class="fa fa-user"></i></span>
                            </div>
                            @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control", onkeyup = "mascara('###.###.###-##',this,event,true)", minlength = "14", maxlength = "14", placeholder = "CPF", id = "cpf" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                        <span id="msgCPF" class="text-danger field-validation-valid">CPF inválido.</span>
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="basic-addon1"><i class="fa fa-envelope"></i></span>
                            </div>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "E-mail" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="basic-addon1"><i class="fa fa-calendar"></i></span>
                            </div>
                            @Html.EditorFor(model => model.DtNascimento, new { htmlAttributes = new { @class = "form-control", onkeyup = "mascara('##/##/####', this,event,true)", placeholder = "Data de Nascimento", id = "dtNascimentoEsqueceuSenha" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.DtNascimento, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="basic-addon1"><i class="fas fa-key"></i></span>
                            </div>
                            @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { id = "myPass", @class = "form-control", placeholder = "Nova senha" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="basic-addon1"><i class="fas fa-key"></i></span>
                            </div>
                            @Html.EditorFor(model => model.ConfirmarSenha, new { htmlAttributes = new { id = "myConfirmPass", @class = "form-control", placeholder = "Confirmar senha" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ConfirmarSenha, "", new { @class = "text-danger" })

                    </div>

                    <!--Mostrar Senha-->
                    <div class="custom-control custom-toggle my-2">
                        <input type="checkbox" id="customToggle1" name="customToggle1" class="custom-control-input" onclick="myFunction(); myFunctionConfirmPass();">
                        <label class="custom-control-label" for="customToggle1">Mostrar senha</label>
                    </div>
                    <!--Mostrar Senha-->
                </form>
                <br>
                <div class="text-center">


                    <button id="alterarSenha" type="submit" class="btn btn-purple">Alterar senha</button>
                </div>
            </div>
        </div>

    </div>
    <div class="d-flex justify-content-center"><small id="cpfHelp" class="form-text text-muted">Nós não compartilharemos suas informações com ninguém.</small></div>

    <script src="~/Scripts/shards.min.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap-datepicker.pt-BR.min.js" charset="utf-8" type="text/javascript"></script>

    <script src="~/Scripts/ValidateCPF/CPF.js"></script>

    <script type="text/javascript">var msg = $("#msgCPF")
        msg.hide();

        $("#cpf").focus(function () {
            msg.hide();
        })
            .blur(function () {

                if (CPF.validate($(this).val()))
                    msg.hide();
                else
                    msg.show();
            })

        $("#dtNascimentoEsqueceuSenha").removeAttr("data-val-date");
        $('#dtNascimentoEsqueceuSenha').datepicker({
            weekStart: 0,
            maxViewMode: 2,
            language: "pt-BR",
            multidate: false,
            autoclose: true,
            todayHighlight: true
        });</script>

}