@model NPJ_MVC.Models.UsuarioModel

@{
    /**/

    ViewBag.Title = "Cadastrar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



    <div class="container d-flex justify-content-center border-dark" style= "border-radius: 100rem;">
        <div class="card d-flex align-items-center">
            <div class="card-body">
                <h4 class="card-title d-flex justify-content-center">Cadastro de Assistido</h4>
                <hr />
                @if (ViewBag.msgErro != null)
                {
                    <div class="alert alert-danger">
                        @ViewBag.msgErro
                    </div>
                }

                @if (ViewBag.CadastroUsuarioSucesso != null)
                {
                    <div class="alert alert-success">
                        @ViewBag.CadastroUsuarioSucesso
                    </div>
                }

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <h4>Informações Pessoais</h4>
                <hr />
                <div class="form-row" id="infos">
                    <!-- Informações básicas -->
                    <!--Nome-->
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.nmUsuario, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.nmUsuario, new { htmlAttributes = new { @class = "form-control col-md-11", placeholder = "Seu nome completo" } })
                        @Html.ValidationMessageFor(model => model.nmUsuario, "", new { @class = "text-danger" })
                    </div>
                    <!--Nome-->
                </div>
                <hr />
                <h4>Documentos Pessoais</h4>
                <hr />
                <div class="form-row" id="documentos">
                    <!--CPF-->
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.nuCPF, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.nuCPF, new { htmlAttributes = new { id = "cpf", onkeyup = "mascara('###.###.###-##', this,event,true)", @class = "form-control col-md-11", minlength = "14", maxlength = "14", placeholder = "___.___.___-__" } })
                        @Html.ValidationMessageFor(model => model.nuCPF, "", new { @class = "text-danger" })
                        <!--<span id="msgCPF" class="text-danger field-validation-valid">CPF inválido</span>-->
                    </div>
                    <!--CPF-->
                    <!--Numero RG-->
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.nuIdentidade, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.nuIdentidade, new { htmlAttributes = new { @class = "form-control col-md-11", placeholder = "Informe o número do seu RG" } })
                        @Html.ValidationMessageFor(model => model.nuIdentidade, "", new { @class = "text-danger" })
                    </div>
                    <!--Numero RG-->
                </div>
                <hr />
                <h4>Endereço</h4>
                <hr />
                <div class="form-row" id="endereco">
                    <!--Local de Residência-->
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.deLocalResidencia, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.deLocalResidencia, new { htmlAttributes = new { @id = "cidade", @class = "form-control col-md-10", placeholder = "Local de Residência" } })
                        @Html.ValidationMessageFor(model => model.deLocalResidencia, "", new { @class = "text-danger" })
                    </div>
                    <!--Nome Cidade-->
                </div>
                <hr />
                <h4>Senha pessoal</h4>
                <hr />
                <div class="form-row" id="senharow">
                    <!--Senha-->
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.coSenha, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.coSenha, new { htmlAttributes = new { @id = "myPass", @class = "form-control col-md-11", placeholder = "Mínimo de 6 caracteres" } })
                        @Html.ValidationMessageFor(model => model.coSenha, "", new { @class = "text-danger" })
                    </div>
                    <!--Senha-->
                    <!--Mostrar Senha-->
                    <!--<div class="custom-control custom-toggle my-2">
                        <input type="checkbox" id="customToggle1" name="customToggle1" class="custom-control-input" onclick="myFunction(); myFunctionConf()">
                        <label class="custom-control-label" for="customToggle1">Mostrar senha</label>
                    </div>-->
                    <!--Mostrar Senha-->
                </div>
                <hr />
                <div class="form-group d-flex justify-content-center">
                    <div class="col-md-offset-2 col-md-10  d-flex justify-content-center">
                        <input type="submit" value="Cadastrar" class="btn btn-purple" />
                    </div>
                </div>
            </div>
        </div>

    </div>

}

<script src="~/Scripts/shards.min.js" type="text/javascript"></script>
<script src="~/Scripts/bootstrap-datepicker.pt-BR.min.js" charset="utf-8" type="text/javascript"></script>

<script src="~/Scripts/ValidateCPF/CPF.js"></script>
<script type="text/javascript">
    $("#cpf").focus(function () {
        msg.hide();
    })
        .blur(function () {

            if (CPF.validate($(this).val()))
                msg.hide();
            else
                msg.show();
        })

</script>

